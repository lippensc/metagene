% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metagene.R
\docType{data}
\name{metagene}
\alias{metagene}
\title{A class to manage metagene analysis.}
\format{A metagene experiment manager}
\usage{
metagene
}
\value{
\code{metagene$new} returns a \code{metagene} object which contains the
normalized coverage values for every regions and for every BAM files.
}
\description{
This class will allow to load, convert and normalize alignments and regions
files/data. Once the data is ready, the user can then chose to produce
metagene plots on the data (or a subset of the data).
}
\section{Constructor}{

\describe{
   \item{}{\code{mg <- metagene$new(regions, bam_files, padding_size = 0,
                           cores = SerialParam(), verbose = FALSE,
                           force_seqlevels = FALSE, paired_end = FALSE,
                           assay = 'chipseq'))}}
   \item{regions}{Either a \code{vector} of BED, narrowPeak or broadPeak
                   filenames, a \code{GRanges} object or a 
                   \code{GRangesList} object.}
   \item{bam_files}{A \code{vector} of BAM filenames. The BAM files must be
                   indexed. i.e.: if a file is named file.bam, there must
                   be a file named file.bam.bai or file.bai in the same 
                   directory.}
   \item{padding_size}{The regions will be extended on each side by the
                       value of this parameter. The padding_size must be a
                       non-negative integer. Default = 0.}
   \item{cores}{The number of cores available to parallelize the analysis.
               Either a positive integer or a \code{BiocParallelParam}.
               Default: \code{SerialParam()}.}
   \item{verbose}{Print progression of the analysis. A logical constant.
                   Default: \code{FALSE}.}
   \item{force_seqlevels}{If \code{TRUE}, Remove regions that are not found
               in bam file header. Default: \code{FALSE}. TRUE and FALSE
               respectively correspond to pruning.mode = "coarse"
               and "error" in ?seqinfo.}
   \item{paired_end}{If \code{TRUE}, metagene will deal with paired-ended 
               data. If \code{FALSE}, single-ended data are expected. 
               Default: \code{FALSE}}
   \item{assay}{\code{'chipseq'} or \code{'rnaseq'}, the two available 
               options. Default: \code{'chipseq'}}
}

   \code{metagene$new} returns a \code{metagene} object that contains the
       coverages for every BAM files in the regions from the \code{regions}
       param.
}

\section{Methods}{

\describe{
   \item{}{\code{mg$plot(region_names = NULL, design_names = NULL,
               title = NULL, x_label = NULL)}}
   \item{region_names}{The names of the regions to extract. If \code{NULL},
                       all the regions are returned. Default: \code{NULL}.}
   \item{design_names}{The names of the experiments to extract. If a design
           was added to the \code{metagene} object, \code{design_names}
           correspond to the column names in the design, otherwise
           \code{design_names} corresponds to the BAM name or the BAM
           filename. If \code{NULL}, all the experiments are
           returned. Default: \code{NULL}.}
   \item{title}{A title to add to the graph. If \code{NULL}, will be
                       automatically created. Default: NULL}
   \item{x_label}{X-axis label to add to the metagene plot. If \code{NULL},
                   metagene will use generic label. Default: \code{NULL}.}
}
\describe{
   \item{}{\code{mg$produce_table(design, bin_count, noise_removal,
               normalization, flip_regions, bin_size = NULL}}
   \item{design}{A \code{data.frame} that describe to experiment to plot.
           see \code{plot} function for more details. \code{NA} can 
           be used keep previous design value. Default: \code{NA}.}
   \item{bin_count}{The number of bin to create. \code{NA} can be used to
                   keep previous bin_count value. A bin_count value of 100
                   will be used if no value is specified. Default:
                   \code{NA}.}
   \item{noise_removal}{The algorithm to use to remove control(s). Possible
                       values are \code{NA}, \code{NULL} or "NCIS". By
                       default, value is \code{NULL}. Use \code{NA} keep
                       previous \code{noise_removal} value (i.e. if
                       \code{produce_table} was called before). See
                       Liand and Keles 2012 for the NCIS algorithm.}
   \item{normalization}{The algorithm to use to normalize samples. Possible
                       default, value is \code{NULL} and no normalization
                       will be performed. Use \code{NA} keep
                       previous \code{normalization} value (i.e. if
                       \code{produce_table} was called before).}
   \item{flip_regions}{Should regions on negative strand be flip_regions?
                       Default: \code{FALSE}.}
   \item{bin_size}{Deprecated.}
}
\describe{
   \item{}{\code{mg$produce_data_frame(alpha = 0.05, sample_count = 1000, 
                               avoid_gaps = FALSE, gaps_threshold = 0)}}
   \item{alpha}{The range of the estimation to be shown with the ribbon.
               \code{1 - alpha / 2} and \code{alpha / 2} will be used.
               Default: 0.05.}
   \item{sample_count}{The number of draw to do in the bootstrap
                       calculation. Default: 1000.}
   \item{avoid_gaps}{Provide the possibility to remove values = 0 and refit
                   the data_frame for this suppression.
                   Default : \code{FALSE}.}
   \item{gaps_threshold}{It works with avoid_gaps argument. It lets to remove
                   values <= at gaps_threshold. Default : 0.}
}
\describe{
   \item{}{mg$get_params()}
}
\describe{
   \item{}{mg$get_design()}
}
\describe{
   \item{}{mg$get_regions(region_names = NULL)}
   \item{region_names}{The names of the regions to extract. If \code{NULL},
                       all the regions are returned. Default: \code{NULL}.}
}
\describe{
   \item{}{mg$get_table = function()}
}
\describe{
   \item{}{mg$get_matrices = function()}
}
\describe{
   \item{}{mg$get_data_frame(region_names = NULL, design_names = NULL)}
   \item{region_names}{The names of the regions to extract. If \code{NULL},
                       all the regions are returned. Default: \code{NULL}.}
   \item{design_names}{The names of the experiments to extract. If a design
           was added to the \code{metagene} object, \code{design_names}
           correspond to the column names in the design, otherwise
           \code{design_names} corresponds to the BAM name or the BAM
           filename. If \code{NULL}, all the experiments are
           returned. Default: \code{NULL}.}
}
\describe{
   \item{}{get_plot = function()}
}
\describe{
   \item{}{get_raw_coverages = function(filenames)}
   \item{filenames}{The name of the file to extract raw coverages. Can be
                   the filename with the extension of the name of the bam
                   file (if a named bam files was used during the creation
                   of the metagene object). If \code{NULL}, returns the
                   coverage of every bam files. Default: \code{NULL}.}
}
\describe{
   \item{}{get_normalized_coverages = function(filenames)}
   \item{filenames}{The name of the file to extract normalized coverages 
           (in RPM). Can be the filename with the extension of 
           the name of the bam file (if a named bam files was used during
           the creation of the metagene object). If \code{NULL},
           returns the coverage every bam files. Default:
           \code{NULL}.}
}
\describe{
   \item{}{\code{mg$export(bam_file, region, file)}}
   \item{bam_file}{The name of the bam file to export.}
   \item{region}{The name of the region to export.}
   \item{file}{The name of the ouput file.}
}
\describe{
   \item{}{\code{mg$add_design(design = NULL, check_bam_files = FALSE)}}
   \item{design}{A \code{data.frame} that describe to experiment to plot.
           See \code{plot} function for more details. \code{NA} can be
           used keep previous design value. Default: \code{NA}.}
   \item{check_bam_files}{Force check that all the bam files from the first
                           columns of the design are present in current
                           metagene object. Default: \code{FALSE}}
}
\describe{
   \item{}{\code{mg$unflip_regions()}}
}

\describe{
   \item{}{\code{mg$flip_regions()}}
}
\describe{
   \item{}{\code{mg$unflip_regions()}}
}
}

\examples{
region <- get_demo_regions()[1]
bam_file <- get_demo_bam_files()[1]
mg <- metagene$new(regions = region, bam_files = bam_file)
\dontrun{
   df <- metagene$plot()
}

}
\keyword{datasets}
